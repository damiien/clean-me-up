name: REST API CI/CD

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '*.md'

jobs:
  build_api:
    name: Compile and test the REST API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build rest-api artifact
        env:
          SUPER_SECRET: ${{ secrets.SSH_PRIVATE }} 
        run: |
          mkdir -p ~/.ssh
          echo "$SUPER_SECRET" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

          ssh -o StrictHostKeyChecking=no -N -L 5432:localhost:5432 dame@arktype.net &
          mvn spring-boot:repackage

      - name: Upload rest-api artifact
        uses: actions/upload-artifact@v2
        with:
          name: rest-api-jar
          path: clean-me-up-rest/target/clean-me-up-rest-1.0.0-SNAPSHOT.jar
          retention-days: 5

  build_docker:
    needs: [build_api]
    name: Build the rest-api docker image
    services:
      docker:
        image: docker:dind
    runs-on: ubuntu-20.04
    container: docker:dind
    steps:
      - uses: actions/checkout@v2
      - name: Download rest-api artifact
        uses: actions/download-artifact@v2
        with:
          name: rest-api-jar
          path: rest-api-jar

      - name: Build rest-api docker image
        env:
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY: docker.pkg.github.com
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
          docker build -f Dockerfile -t docker.pkg.github.com/arktype/clean-me-up-rest-api .
          docker push docker.pkg.github.com/arktype/clean-me-up-rest-api

  deploy_api:
    needs: [build_docker]
    name: Deploy rest-api docker image
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy rest-api docker image
        env:
          SUPER_SECRET: ${{ secrets.SSH_PRIVATE }}
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY: docker.pkg.github.com
        run: |
          mkdir -p ~/.ssh
          echo "$SUPER_SECRET" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

          cat .github/workflows/update.sh | envsubst | ssh -o StrictHostKeyChecking=no dame@arktype.net

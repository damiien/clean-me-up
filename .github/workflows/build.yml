name: REST API CI/CD

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '*.md'

jobs:
  build_api_artifact:
    name: Compile and verify REST-API
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4

      - name: Cache Sonar packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - uses: actions/checkout@v2
      - name: Build REST-API artifact
        run: mvn -B clean package -DskipTests

      - name: Verify REST-API artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=damiien_clean-me-up

      - name: Test REST-API artifact
        run: mvn -B clean verify -Psurefire

      - name: Upload REST-API artifact
        uses: actions/upload-artifact@v2
        with:
          name: rest-api-jar
          path: clean-me-up-rest/target/clean-me-up-rest-1.0.0-SNAPSHOT.jar
          retention-days: 5

  build_api_image:
    needs: [build_api_artifact]
    name: Build REST-API image
    services:
      docker:
        image: docker:dind
    runs-on: ubuntu-latest
    container: docker:dind
    steps:
      - uses: actions/checkout@v2
      - name: Download REST-API artifact
        uses: actions/download-artifact@v2
        with:
          name: rest-api-jar
          path: rest-api-jar

      - name: Build REST-API docker image
        env:
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY: docker.pkg.github.com
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
          docker build -f Dockerfile -t docker.pkg.github.com/damiien/clean-me-up-rest-api/clean-me-up-rest-api .
          docker push docker.pkg.github.com/damiien/clean-me-up-rest-api/clean-me-up-rest-api

  deploy_api_image:
    needs: [build_api_image]
    name: Deploy REST-API image
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy REST-API docker image
        env:
          SUPER_SECRET: ${{ secrets.SSH_PRIVATE_KEY }}
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY: docker.pkg.github.com
        run: |
          mkdir -p ~/.ssh
          echo "$SUPER_SECRET" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

          cat .github/workflows/update.sh | envsubst | ssh -o StrictHostKeyChecking=no dame@arktype.net
